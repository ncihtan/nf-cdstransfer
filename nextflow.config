profiles {

  // ---------- Local dev (runs on your machine) ----------
  local {
    process.executor = 'local'
    docker.enabled   = true
    // If you want local testing without Tower secrets, export these in your shell:
    // export SYNAPSE_AUTH_TOKEN=...
    // export CRDC_API_TOKEN=...
    // export CRDC_SUBMISSION_ID=...
  }

  // ---------- Plain docker profile ----------
  docker {
    docker.enabled = true
  }

  // ---------- Test / CI ----------
  test {
    process.executor = 'local'
    docker.enabled   = true

    // match main.nf param names
    params.input     = 'samplesheet.csv'
    params.dry_run   = true        // was params.dryrun
    params.take_n    = 1           // run just one row for smoke tests
  }

  // ---------- Your existing Seqera configs ----------
  sage  { includeConfig 'conf/sage.config'  }
  tower { includeConfig 'conf/tower.config' }
}

// ---------------- Global params (defaults) ----------------
params {
  dry_run       = false           // was dryrun
  overwrite     = true            // used by make_uploader_config
  take_n        = -1
  change_bucket = false           // keep if referenced elsewhere
}

// ---------------- Plugins ----------------
plugins {
  id 'nf-schema@2.2.0'
  id 'nf-boost'
}

boost {
  cleanup = false
}

// ---------------- Tracing ----------------
trace {
  enabled   = true
  overwrite = true
  file      = 'reports/trace.csv'
  sep       = ','
  fields    = 'task_id,hash,native_id,name,status,exit,submit,duration,realtime,%cpu,peak_rss,peak_vmem,rchar,wchar'
}

// Ensure Docker is on by default
docker.enabled = true

// ---------------- Environment mapping ----------------
// Map Tower secrets -> env vars your processes use.
// In Tower, define secrets with either of these names;
// this mapping prefers explicit TOWER_ prefixed but falls back.
env {
  SYNAPSE_AUTH_TOKEN = "${System.getenv('TOWER_SECRET_SYNAPSE_AUTH_TOKEN') ?: System.getenv('SYNAPSE_AUTH_TOKEN')}"
  CRDC_API_TOKEN     = "${System.getenv('TOWER_SECRET_CRDC_API_TOKEN')     ?: System.getenv('CRDC_API_TOKEN')}"
  CRDC_SUBMISSION_ID = "${System.getenv('TOWER_SECRET_CRDC_SUBMISSION_ID') ?: System.getenv('CRDC_SUBMISSION_ID')}"
}
