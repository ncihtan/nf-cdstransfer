{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://raw.githubusercontent.com/ncihtan/nf-cdstransfer/main/nextflow_schema.json",
  "title": "nf-cdstransfer",
  "description": "Workflow to transfer data from Synapse to CRDC",
  "type": "object",

  "definitions": {
    "input_output_options": {
      "title": "Input/output options",
      "type": "object",
      "fa_icon": "fas fa-terminal",
      "description": "Where the pipeline finds input and how it behaves.",
      "required": ["input"],
      "properties": {
        "input": {
          "description": "CSV with entities to transfer (local path or URL).",
          "help_text": "Comma-separated file with a header row. May be a local path or a Tower Dataset URL.",
          "fa_icon": "fas fa-file-csv",
          "oneOf": [
            {
              "type": "string",
              "format": "uri",
              "pattern": "^https?://.+\\.csv$"
            },
            {
              "type": "string",
              "format": "file-path",
              "exists": true,
              "mimetype": "text/csv",
              "pattern": "^\\S+\\.csv$"
            }
          ]
        },
        "dryrun": {
          "type": "boolean",
          "default": false,
          "description": "Run in dry-run mode",
          "help_text": "No data will be uploaded. The pipeline prepares configs and prints commands.",
          "fa_icon": "fas fa-flask"
        },
        "take_n": {
          "type": "integer",
          "default": -1,
          "description": "Process only the first N rows; -1 = all",
          "help_text": "For testing, set to a small positive integer. The workflow only applies the limit if > 0.",
          "fa_icon": "fas fa-filter"
        },
        "change_bucket": {
          "type": "string",
          "description": "Replace bucket names inside aws_uri (if present)",
          "help_text": "If provided, s3://old-bucket/key â†’ s3://{change_bucket}/key in any aws_uri column.",
          "fa_icon": "fas fa-bucket"
        }
      }
    },

    "crdc_options": {
      "title": "CRDC uploader options",
      "type": "object",
      "fa_icon": "fas fa-cloud-upload-alt",
      "description": "Parameters used to contact CRDC and control uploads.",
      "properties": {
        "crdc_api_url": {
          "type": "string",
          "format": "uri",
          "description": "CRDC API base URL",
          "help_text": "Example: https://data.submission.cancer.gov",
          "fa_icon": "fas fa-link"
        },
        "crdc_submission": {
          "type": "string",
          "pattern": "^[0-9a-fA-F-]{36}$",
          "description": "CRDC submission ID (UUID)",
          "help_text": "You can also provide this as env/secret CRDC_SUBMISSION.",
          "fa_icon": "fas fa-id-badge"
        },
        "crdc_overwrite": {
          "type": "boolean",
          "default": false,
          "description": "Allow overwriting existing submissions",
          "help_text": "Set true to allow overwriting existing files in CRDC.",
          "fa_icon": "fas fa-exchange-alt"
        },
        "crdc_retries": {
          "type": "integer",
          "default": 3,
          "minimum": 0,
          "description": "Number of times to retry failed uploads",
          "help_text": "Defaults to 3 retries per file.",
          "fa_icon": "fas fa-redo"
        }
      }
    }
  },

  "allOf": [
    { "$ref": "#/definitions/input_output_options" },
    { "$ref": "#/definitions/crdc_options" }
  ]
}

